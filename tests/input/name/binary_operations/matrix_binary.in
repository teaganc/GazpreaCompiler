procedure main() returns integer {
    // vector concat a integer and real vector
    // integer binary ops
    integer[2, 1] i = [[1], [2]] + [[1], [2]];
    integer[2, 1] i2 = i - [[1], [1]];
    integer[2, 1] i3 = i2 * [[2], [3]];
    integer[2, 1] i4 = [[4], [5]] / [[2], [2]];
    integer[2, 1] i5 = [[10], [8]] % [[6], [3]];
    integer[2, 1] i6 = [[10], [5]] ^ [[1], [2]];
    integer[2, 1] i7 = [[10], [3]] * ([[1], [1]] + [[2], [2]]);

    boolean[2, 1] i11 = [[2], [3]] < [[1], [3]];
    boolean[2, 1] i12 = [[2], [3]] > [[1], [3]];
    boolean[2, 1] i13 = [[2], [3]] <= [[1], [3]];
    boolean[2, 1] i14 = [[2], [3]] >= [[1], [3]];
    boolean i15 = [[2], [3]] == [[1], [3]];
    boolean i16 = [[2], [3]] != [[1], [3]];

    integer[3, 1] i17 = [[1], [2], [3]] + 1;
    integer[3, 1] i18 = [[1], [2], [3]] + [[1], [1], [1]];

    // real binary ops
    real[2, 1] f = [[1.0], [2.0]] + [[1.0], [2.0]];
    real[2, 1] f2 = f - [[1.0], [1.0]];
    real[2, 1] f3 = f2 * [[2.0], [3.0]];
    real[2, 1] f4 = [[4.0], [5.0]] / [[2.0], [2.0]];
    real[2, 1] f5 = [[10.0], [8.0]] % [[6.0], [3.0]];
    real[2, 1] f6 = [[10.0], [5.0]] ^ [[1.0], [2.0]];
    real[2, 1] f7 = [[10.0], [3.0]] * ([[1.0], [1.0]] + [[2.0], [2.0]]);

    boolean[2, 1] f11 = [[2.0], [3.0]] < [[1.0], [3.0]];
    boolean[2, 1] f12 = [[2.0], [3.0]] > [[1.0], [3.0]];
    boolean[2, 1] f13 = [[2.0], [3.0]] <= [[1.0], [3.0]];
    boolean[2, 1] f14 = [[2.0], [3.0]] >= [[1.0], [3.0]];
    boolean f15 = [[2.0], [3.0]] == [[1.0], [3.0]];
    boolean f16 = [[2.0], [3.0]] != [[1.0], [3.0]];

    real[3, 1] f17 = [[1.0], [2.0], [3.0]] + 1.0;
    real[3, 1] f18 = [[1.0], [2.0], [3.0]] + [[1.0], [1.0], [1.0]];

    // boolean operations
    boolean[2, 1] b = [[true], [false]] or [[false], [false]];
    boolean[2, 1] b2 = [[true], [false]] xor [[false], [false]];
    boolean b3 = [[true], [false]] == [[false], [false]];
    boolean b4 = [[true], [false]] != [[false], [false]];
    boolean b5 = [[true], [false]] == ([[true], [false]] == [[true], [true]]);
    boolean[2, 1] b6 = [[true], [false]] and [[false], [false]];

    // dot product
    //integer[*,*] i19 = [[1], [2]] ** [[1], [2]];
    //real[*,*] f19 = [[1.0], [2.0]] ** [[1.0], [2.0]];

    i -> std_output; ' ' -> std_output;
    i2 -> std_output; ' ' -> std_output;
    i3 -> std_output; ' ' -> std_output;
    i4 -> std_output; ' ' -> std_output;
    i5 -> std_output; ' ' -> std_output;
    i6 -> std_output; ' ' -> std_output;
    i7 -> std_output; '\n' -> std_output;
    i11 -> std_output; ' ' -> std_output;
    i12 -> std_output; ' ' -> std_output;
    i13 -> std_output; ' ' -> std_output;
    i14 -> std_output; ' ' -> std_output;
    i15 -> std_output; ' ' -> std_output;
    i16 -> std_output; ' ' -> std_output;
    i17 -> std_output; ' ' -> std_output;
    i18 -> std_output; '\n' -> std_output;
    //i19 -> std_output; '\n' -> std_output;

    f -> std_output; ' ' -> std_output;
    f2 -> std_output; ' ' -> std_output;
    f3 -> std_output; ' ' -> std_output;
    f4 -> std_output; ' ' -> std_output;
    f5 -> std_output; ' ' -> std_output;
    f6 -> std_output; ' ' -> std_output;
    f7 -> std_output; '\n' -> std_output;
    f11 -> std_output; ' ' -> std_output;
    f12 -> std_output; ' ' -> std_output;
    f13 -> std_output; ' ' -> std_output;
    f14 -> std_output; ' ' -> std_output;
    f15 -> std_output; ' ' -> std_output;
    f16 -> std_output; ' ' -> std_output;
    f17 -> std_output; ' ' -> std_output;
    f18 -> std_output; '\n' -> std_output;
    //f19 -> std_output; '\n' -> std_output;

    b -> std_output; ' ' -> std_output;
    b2 -> std_output; ' ' -> std_output;
    b3 -> std_output; ' ' -> std_output;
    b4 -> std_output; ' ' -> std_output;
    b5 -> std_output; ' ' -> std_output;
    b6 -> std_output; '\n' -> std_output;

    return 0;
}