procedure main() returns integer {
  var i = as<integer[2]>(1.0);
  var r = as<real[2]>(1.0);
  var iv = as<integer[2]>(1..2);

  integer[2] i2 = as<integer[2]>([1]);
  real[2] r2 = as<real[2]([1]);
  boolean[2] b2 = as<boolean[2]>([1]);
  character[2] c2 = as<character[2]>([1]);

  integer[2] i3 = as<integer[2]>([true]);
  boolean[2] b3 = as<boolean[2]>([true]);
  character[2] c3 = as<character[2]>([true]);

  integer[2] i4 = as<integer[2]>(['A']);
  boolean[2] b4 = as<boolean[2]>(['A']);
  character[2] c4 = as<character[2]>(['A']);

  // interval casting
  integer[*] iv1 = as<integer[*]>(1..10);
  // truncating a cast
  integer[2] i5 = as<integer[2]>([1, 3, 4, 2]);
  // taking original size
  real[*] r5 = as<real[*]>([1, 3, 4, 2]);

  i -> std_output; ' ' -> std_output;
  r -> std_output; ' ' -> std_output;
  iv -> std_output; '\n' -> std_output;

  i2 -> std_output; ' ' -> std_output;
  r2 -> std_output; ' ' -> std_output;
  b2 -> std_output; ' ' -> std_output;
  c2 -> std_output; '\n' -> std_output;

  i3 -> std_output; ' ' -> std_output;
  b3 -> std_output; ' ' -> std_output;
  c3 -> std_output; '\n' -> std_output;

  i4 -> std_output; ' ' -> std_output;
  b4 -> std_output; ' ' -> std_output;
  c4 -> std_output; '\n' -> std_output;

  iv1 -> std_output; ' ' -> std_output;
  i5 -> std_output; ' ' -> std_output;
  r5 -> std_output; '\n' -> std_output;

  return 0;
}